Alexandru Madalin Vasilescu-321CB

Am deschis fisierele si am citit datele in clasa main. Am creat 2 metode pentru a instantia o echipa si respectiv un player in cadrul acestei clase. In metoda main se deschid fisierele primite ca parametri la rulare. Se citesc echipele si se salveaza intr-un ArrayList pentru a fi ulterior utilizate. Daca se primeste comanda "inscriere" se afiseaza toate echipele pe rand cu Newline intre ele. Daca se primeste comanda "competitie" se instantiaza un obiect din clasa competitie cu tipul si genderul primit in al doilea fisier de input. Se verifica fiecare echipa pe rand daca trebuie adaugata. Daca echipa corespune numelui se verifica daca este de sportul specificat in competitie si de genderul specificat. Se adauga echipele potrivite in obiectul competitie si apoi se apeleaza metodele de jocuri si afisarile corespunzatoare. La final se restaureaza afisare in consola si se inchide readerul. 

Instantierea echipelor se face in clasa main in cadrul metodei createTeam. Aceasta metoda foloseste un obiect de tipul TeamFactory. Se creaza echipa speciala in functie de sportul specificat si se seteaza atributele. Pentru asta am folosit design patternul Factory ca sa imi creeze exact echipa speciala de sport. Am 3 clase  care extind clasa Team si care sunt instantiate print Factory. Pentru TeamFactory am folosit design patternul Singleton. Astfel am un atribut obiect de tip TeamFactory si un constructor privat. Se creaza o singura data un TeamFactory si se foloseste mereu pentru fiecare initializare a echipelor.

Toate metodele si atributele pentru echipe sunt in clasa Team, clasele derivate doar mostenind atributele si metodele din Team. In clasele FootballTeam, BasketballTeam si HandballTeam am doar constructor fara parametri care apeleaza constructorul superclasei si metoda accept, folosita de Visitor pentru a calcula scorul. In clasa Team am atributele cerute in enunt(name, gender, number of players si un ArrayList cu toti jucatorii) precum si atribute ajutatoare pentru rezolvarea celorlate cerinte. Type reprezinta sportul echipei. PozitieInClasament este folosit pentru a retine pozitia dupa fiecare meci si este actualizat prin design patternul Observer. Points este folosit pentru a retine numarul de puncte ale unei echipe in cadrul unei competiti. In cazul folosiri comenzii "inscriere" atributele suplimentare nu sunt folosite. Toate atributele se seteaza prin Setteri, cu exceptia pozitieInClasament care se seteaza print metoda modifyPosition implementata din interfata Observer si cu exceptia punctelor care se actualizeaza prin metodele win si tie. Metoda win adauga 3 puncte la numarul total de puncte al echipei si metoda tie adauga un punct la numarul total de puncte al echipei. ArrayListul de jucatori se seteaza de asemenea diferit, fiecare jucator fiind adaugat unei echipe prin metoda addPlayer. In cadrul clasei Team am suprascris metoda compareTo(Team implementeaza interfata Comparable) pentru a compara doua echipe in functie de numarul de puncte si a sorta vectorul de clasament descrescator. Am inversat ce intoarce functia compareTo, astfel ca daca elementul comparat este mai mic decat cel curent se va intoarce -1 si invers. De asemenea am suprascris metoda toString pentru a-mi afisa echipa conform enuntului.

Clasa Player are atributele cerute in enunt(score si name). Acestea sunt setate cu ajutorul Setterilor. Am suprascris in cadrul clasei Player metoda toString pentru a-mi afisa un jucator conform enuntului.

Interfata Visitor contine 3 semnaturi de metode, cate una pentru fiecare tip de echipa FootballTeam, BasketballTeam si HandballTeam. Implementarile sunt facute in clasa ScoreCalculator. In cadrul acestei clase fiecare tip de echipa are un tip de calcul diferit. De asemenea este respectat si genderul in calculul punctajelor. Am realizat calcularea scorurilor conform enuntului(Football team man- total+MAX, Football team woman- total+MIN,etc.). Metodele sunt accesate prin metoda accept din interfata Accepter,implementata de fiecare clasa FootballTeam, BasketballTeam si HandballTeam. Astfel fiecare scor al unei echipe se calculeaza folosind design patternul Visitor.

Clasa Competitie are atributele cerute in enunt(type, gender, teams(ArrayList), clasament(ArrayList)). Type si gender sunt setate prin Setter. In liste sunt adaugate echipe cu metoda addTeamCompetitie care adauga toate echipele in ordinea citita in fisier atat in teams cat si in clasament. Dupa adaugarea echipelor corespunzatoare in clasa se foloseste metoda jocuri(). In cadrul acestei metode am luat 2 foruri astfel incat fiecare echipa sa joace o singura data cu toate celelate echipe(se apeleaza metoda meci). Dupa fiecare meci se actualizeaza clasamentul, vectorul sortandu-se dupa numarul de puncte descrescator. Dupa sortare se notifica Observerul si se actualizeaza pozitiaInClasament in cadrul fiecare echipe din competitie. Metoda meci verifica care echipa are scorul mai mare. Scorul nu este retinut si este de fiecare data accesat folosit Visitorul. Se folosesc metodele win si tie pentru a actualiza punctele fiecarei echipe. Metoda printPrimeleTrei afiseaza numele primelor 3 echipe din clasament. Metoda printEchipe afiseaza toate echipele din competitie si pozitia lor in clasament.